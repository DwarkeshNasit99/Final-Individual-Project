AWSTemplateFormatVersion: '2010-09-09'
Description: 'PROG 8870 Final Project - RDS MySQL Instance using CloudFormation'

Parameters:
  ProjectName:
    Type: String
    Default: 'prog8870-final'
    Description: 'Name of the project'
  
  Environment:
    Type: String
    Default: 'dev'
    Description: 'Environment name'
    AllowedValues:
      - dev
      - staging
      - prod
  
  DBInstanceClass:
    Type: String
    Default: 'db.t3.micro'
    Description: 'RDS instance class'
    AllowedValues:
      - db.t3.micro
      - db.t3.small
      - db.t3.medium
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
  
  AllocatedStorage:
    Type: Number
    Default: 20
    Description: 'Allocated storage in GB'
    MinValue: 20
    MaxValue: 1000
  
  DBName:
    Type: String
    Default: 'prog8870db'
    Description: 'Name of the database'
    AllowedPattern: "^.{8,}$"
    ConstraintDescription: 'Must start with a letter and contain only alphanumeric characters and underscores'
  
  DBUsername:
    Type: String
    Default: 'adminuser'
    Description: 'Database admin username'
    AllowedPattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
    ConstraintDescription: 'Must start with a letter and contain only alphanumeric characters and underscores'
  
  DBPassword:
    Type: String
    NoEcho: true
    Description: 'Database admin password'
    MinLength: 8
    AllowedPattern: "^.{8,}$"
    ConstraintDescription: 'Password must be at least 8 characters'
  
  VpcCidr:
    Type: String
    Default: '10.0.0.0/16'
    Description: 'CIDR block for the VPC'
  
  PrivateSubnet1Cidr:
    Type: String
    Default: '10.0.2.0/24'
    Description: 'CIDR block for private subnet 1'
  
  PrivateSubnet2Cidr:
    Type: String
    Default: '10.0.3.0/24'
    Description: 'CIDR block for private subnet 2'

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-rds-vpc'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Private Subnet 1
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-private-subnet-1'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Private Subnet 2
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-private-subnet-2'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # DB Subnet Group
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub 'Subnet group for ${ProjectName} RDS instance'
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-db-subnet-group'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Security Group for RDS
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ProjectName}-rds-sg'
      GroupDescription: 'Security group for RDS instance'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
          Description: 'MySQL access from anywhere (for project demonstration)'
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: 'All outbound traffic'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-rds-sg'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # RDS Instance
  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Sub '${ProjectName}-rds'
      DBInstanceClass: !Ref DBInstanceClass
      Engine: mysql
      EngineVersion: '8.0.35'
      AllocatedStorage: !Ref AllocatedStorage
      StorageType: gp2
      StorageEncrypted: true
      
      DBName: !Ref DBName
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      
      VPCSecurityGroups:
        - !Ref RDSSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      
      BackupRetentionPeriod: 7
      BackupWindow: '03:00-04:00'
      MaintenanceWindow: 'sun:04:00-sun:05:00'
      
      SkipFinalSnapshot: true
      DeletionProtection: false
      
      PubliclyAccessible: true
      MultiAZ: false
      
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-rds-instance'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

Outputs:
  VPCId:
    Description: 'VPC ID'
    Value: !Ref VPC
    Export:
      Name: !Sub '${AWS::StackName}-VPCId'

  PrivateSubnet1Id:
    Description: 'Private Subnet 1 ID'
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet1Id'

  PrivateSubnet2Id:
    Description: 'Private Subnet 2 ID'
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet2Id'

  DBSubnetGroupName:
    Description: 'DB Subnet Group Name'
    Value: !Ref DBSubnetGroup
    Export:
      Name: !Sub '${AWS::StackName}-DBSubnetGroupName'

  RDSInstanceId:
    Description: 'RDS Instance ID'
    Value: !Ref RDSInstance
    Export:
      Name: !Sub '${AWS::StackName}-RDSInstanceId'

  RDSInstanceEndpoint:
    Description: 'RDS Instance Endpoint'
    Value: !GetAtt RDSInstance.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-RDSInstanceEndpoint'

  RDSInstancePort:
    Description: 'RDS Instance Port'
    Value: !GetAtt RDSInstance.Endpoint.Port
    Export:
      Name: !Sub '${AWS::StackName}-RDSInstancePort'

  SecurityGroupId:
    Description: 'Security Group ID for RDS'
    Value: !Ref RDSSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-SecurityGroupId'
